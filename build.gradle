import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.0'
    id("com.github.johnrengelman.shadow") version "8.1.1"
}

group = 'ru.john'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
    maven { url "https://maven.enginehub.org/repo/" }
    maven { url "https://maven.playpro.com" }
    maven { url "https://repo.dmulloy2.net/repository/public/" }
    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        url = 'https://nexus.phoenixdevt.fr/repository/maven-public/'
    }
}

dependencies {
    compileOnly 'io.lumine:MythicLib-dist:1.6.2-SNAPSHOT'
    compileOnly 'net.Indyuce:MMOItems-API:6.9.5-SNAPSHOT'
    //compileOnly("com.papermc.paper:paper-api:1.18.2-R0.1-SNAPSHOT")
    compileOnly 'io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT'
    implementation "net.kyori:adventure-text-minimessage:4.14.0"
    implementation "org.bstats:bstats-bukkit:3.0.2"
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'space.arim.dazzleconf:dazzleconf-core:1.3.0-M2'
    implementation 'space.arim.dazzleconf:dazzleconf-ext-snakeyaml:1.3.0-M2'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.9-SNAPSHOT'
    compileOnly 'net.coreprotect:coreprotect:21.3'
    compileOnly group: "com.comphenix.protocol", name: "ProtocolLib", version: "4.8.0";
    implementation 'com.zaxxer:HikariCP:5.0.1'
    compileOnly 'me.clip:placeholderapi:2.11.4'
}

shadowJar {
    relocate 'org.bstats', 'ru.john.quasarutils.libs'
    relocate 'com.zaxxer', 'ru.john.quasarutils.libs'
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin' //
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}
